{"version":3,"sources":["../index.js"],"names":["Math","max","min","TableDragSelect","state","selectionStarted","startRow","startColumn","endRow","endColumn","addMode","componentDidMount","window","addEventListener","handleTouchEndWindow","componentWillUnmount","removeEventListener","render","props","value","onChange","renderRows","Children","map","children","i","tr","j","handleTouchStartCell","handleTouchMoveCell","isCellBeingSelected","cell","button","type","isLeftClick","isTouch","e","preventDefault","eventToCellLocation","row","column","setState","minRow","maxRow","minColumn","maxColumn","Component","propTypes","Error","Array","isArray","error","length","columnCount","func","toArray","trs","rowCount","tds","defaultProps","Cell","shouldComponentUpdate","beingSelected","nextProps","selected","td","handleTouchStart","passive","handleTouchMove","className","disabled","onTouchStart","onTouchMove","touches","document","elementFromPoint","touch","clientX","clientY","target","tagName","parentNode","rowIndex","cellIndex"],"mappings":"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","file":"index.js","sourcesContent":["import React from \"react\";\nimport equal from \"deep-is\";\nimport clone from \"clone\";\nimport PropTypes from \"prop-types\";\n\nexport default class TableDragSelect extends React.Component {\n  static propTypes = {\n    value: props => {\n      const error = new Error(\n        \"Invalid prop `value` supplied to `TableDragSelect`. Validation failed.\"\n      );\n      if (!Array.isArray(props.value)) {\n        return error;\n      }\n      if (props.value.length === 0) {\n        return;\n      }\n      const columnCount = props.value[0].length;\n      for (const row of props.value) {\n        if (!Array.isArray(row) || row.length !== columnCount) {\n          return error;\n        }\n        for (const cell of row) {\n          if (typeof cell !== \"boolean\") {\n            return error;\n          }\n        }\n      }\n    },\n    onChange: PropTypes.func,\n    children: props => {\n      if (TableDragSelect.propTypes.value(props)) {\n        return; // Let error be handled elsewhere\n      }\n      const error = new Error(\n        \"Invalid prop `children` supplied to `TableDragSelect`. Validation failed.\"\n      );\n      const trs = React.Children.toArray(props.children);\n      const rowCount = props.value.length;\n      const columnCount = props.value.length === 0 ? 0 : props.value[0].length;\n      if (trs.length !== rowCount) {\n        return error;\n      }\n      for (const tr of trs) {\n        const tds = React.Children.toArray(tr.props.children);\n        if (tr.type !== \"tr\" || tds.length !== columnCount) {\n          return error;\n        }\n        for (const td of tds) {\n          if (td.type !== \"td\") {\n            return error;\n          }\n        }\n      }\n    }\n  };\n\n  static defaultProps = {\n    value: [],\n    onChange: () => {}\n  };\n\n  state = {\n    selectionStarted: false,\n    startRow: null,\n    startColumn: null,\n    endRow: null,\n    endColumn: null,\n    addMode: null\n  };\n\n  componentDidMount = () => {\n    window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n    window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n    window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n  };\n\n  render = () => {\n    const { value, onChange, ...props } = this.props;\n    return (\n      <table className=\"table-drag-select\" {...props}>\n        <tbody>\n          {this.renderRows()}\n        </tbody>\n      </table>\n    );\n  };\n\n  renderRows = () =>\n    React.Children.map(this.props.children, (tr, i) => {\n      return (\n        <tr key={i} {...tr.props}>\n          {React.Children.map(tr.props.children, (cell, j) =>\n            <Cell\n              key={j}\n              onTouchStart={this.handleTouchStartCell}\n              onTouchMove={this.handleTouchMoveCell}\n              selected={this.props.value[i][j]}\n              beingSelected={this.isCellBeingSelected(i, j)}\n              {...cell.props}\n            >\n              {cell.props.children}\n            </Cell>\n          )}\n        </tr>\n      );\n    });\n\n  handleTouchStartCell = e => {\n    const isLeftClick = e.button === 0;\n    const isTouch = e.type !== \"mousedown\";\n    if (!this.state.selectionStarted && (isLeftClick || isTouch)) {\n      e.preventDefault();\n      const { row, column } = eventToCellLocation(e);\n      this.setState({\n        selectionStarted: true,\n        startRow: row,\n        startColumn: column,\n        endRow: row,\n        endColumn: column,\n        addMode: !this.props.value[row][column]\n      });\n    }\n  };\n\n  handleTouchMoveCell = e => {\n    if (this.state.selectionStarted) {\n      e.preventDefault();\n      const { row, column } = eventToCellLocation(e);\n      this.setState({\n        endRow: row,\n        endColumn: column\n      });\n    }\n  };\n\n  handleTouchEndWindow = e => {\n    const isLeftClick = e.button === 0;\n    const isTouch = e.type !== \"mousedown\";\n    if (this.state.selectionStarted && (isLeftClick || isTouch)) {\n      const value = clone(this.props.value);\n      const minRow = Math.min(this.state.startRow, this.state.endRow);\n      const maxRow = Math.max(this.state.startRow, this.state.endRow);\n      for (let row = minRow; row <= maxRow; row++) {\n        const minColumn = Math.min(\n          this.state.startColumn,\n          this.state.endColumn\n        );\n        const maxColumn = Math.max(\n          this.state.startColumn,\n          this.state.endColumn\n        );\n        for (let column = minColumn; column <= maxColumn; column++) {\n          value[row][column] = this.state.addMode;\n        }\n      }\n      this.setState({ selectionStarted: false });\n      this.props.onChange(value);\n    }\n  };\n\n  isCellBeingSelected = (row, column) => {\n    const minRow = Math.min(this.state.startRow, this.state.endRow);\n    const maxRow = Math.max(this.state.startRow, this.state.endRow);\n    const minColumn = Math.min(this.state.startColumn, this.state.endColumn);\n    const maxColumn = Math.max(this.state.startColumn, this.state.endColumn);\n    return (\n      this.state.selectionStarted &&\n      (row >= minRow &&\n        row <= maxRow &&\n        column >= minColumn &&\n        column <= maxColumn)\n    );\n  };\n}\n\nclass Cell extends React.Component {\n  // This optimization gave a 10% performance boost while drag-selecting\n  // cells\n  shouldComponentUpdate = nextProps =>\n    this.props.beingSelected !== nextProps.beingSelected ||\n    this.props.selected !== nextProps.selected;\n\n  componentDidMount = () => {\n    // We need to call addEventListener ourselves so that we can pass\n    // {passive: false}\n    this.td.addEventListener(\"touchstart\", this.handleTouchStart, {\n      passive: false\n    });\n    this.td.addEventListener(\"touchmove\", this.handleTouchMove, {\n      passive: false\n    });\n  };\n\n  componentWillUnmount = () => {\n    this.td.removeEventListener(\"touchstart\", this.handleTouchStart);\n    this.td.removeEventListener(\"touchmove\", this.handleTouchMove);\n  };\n\n  render = () => {\n    let {\n      className,\n      disabled,\n      beingSelected,\n      selected,\n      onTouchStart,\n      onTouchMove,\n      ...props\n    } = this.props;\n    if (disabled) {\n      className += \" cell-disabled\";\n    } else {\n      className += \" cell-enabled\";\n      if (selected) {\n        className += \" cell-selected\";\n      }\n      if (beingSelected) {\n        className += \" cell-being-selected\";\n      }\n    }\n    return (\n      <td\n        ref={td => (this.td = td)}\n        className={className}\n        onMouseDown={this.handleTouchStart}\n        onMouseMove={this.handleTouchMove}\n        {...props}\n      >\n        {this.props.children || <span>&nbsp;</span>}\n      </td>\n    );\n  };\n\n  handleTouchStart = e => {\n    if (!this.props.disabled) {\n      this.props.onTouchStart(e);\n    }\n  };\n\n  handleTouchMove = e => {\n    if (!this.props.disabled) {\n      this.props.onTouchMove(e);\n    }\n  };\n}\n\n// Takes a mouse or touch event and returns the corresponding row and cell.\n// Example:\n//\n// eventToCellLocation(event);\n// {row: 2, column: 3}\nconst eventToCellLocation = e => {\n  let target;\n  // For touchmove and touchend events, e.target and e.touches[n].target are\n  // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n  // to use e.target.\n  if (e.touches) {\n    const touch = e.touches[0];\n    target = document.elementFromPoint(touch.clientX, touch.clientY);\n  } else {\n    target = e.target;\n    while (target.tagName !== \"TD\") {\n      target = target.parentNode;\n    }\n  }\n  return {\n    row: target.parentNode.rowIndex,\n    column: target.cellIndex\n  };\n};\n"]}